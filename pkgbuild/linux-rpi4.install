post_install () {
  # Define root partitions partuuid
  PART_DEV=`findmnt / -o source -n | cut -f1 -d"["`
  PART_NAME=`echo $PART_DEV | cut -d "/" -f 3`
  ROOT_PART=$(lsblk -p -o NAME,PARTUUID | grep "${PART_NAME}" | awk '{print $2}')
  FSTYPE=$(lsblk -p -o NAME,FSTYPE | grep "${PART_NAME}" | awk '{print $2}')
  
  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "btrfs" ]]; then
   echo "===> Installing default btrfs cmdline.txt /boot..."
   echo "rootflags=subvol=@ rootfstype=btrfs root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi
  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "ext4" ]]; then
   echo "===> Installing default ext4 cmdline.txt /boot..."
   echo "root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi
  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "f2fs" ]]; then
   echo "===> Installing default f2fs cmdline.txt /boot..."
   echo "root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi

  if [ -f /boot/config.txt ]; then
    echo "===> Modifing config.txt to load for pi3/4/5 kernels"
    sed -i 's\initramfs initramfs-linux.img followkernel\auto_initramfs=1\g' /boot/config.txt
    sed -i '/kernel=kernel8.img/I d' /boot/config.txt
   else
    echo "===> Installing default config.txt to /boot/..."
    echo "# See /boot/overlays/README for all available options" > /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Uncomment some or all of these to enable optional Hardware interfaces" >> /boot/config.txt
    echo "#dtparam=i2c_arm=on" >> /boot/config.txt
    echo "#dtparam=i2s=on" >> /boot/config.txt
    echo "#dtparam=spi=on" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Enable sound" >> /boot/config.txt
    echo "dtparam=audio=on" >> /boot/config.txt
    echo "# Uncomment if no sound thru hdmi" >> /boot/config.txt
    echo "#hdmi_drive=2" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# See /boot/overlays/README for all available options" > /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Auto load overlays for detected cameras" >> /boot/config.txt
    echo "camera_auto_detect=1" >> /boot/config.txt
    echo "# Auto load overlays for detected DSI displays" >> /boot/config.txt
    echo "display_auto_detect=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Auto load initramfs files if found" >> /boot/config.txt
    echo "auto_initramfs=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Enable DRM VC4 V3D driver" >> /boot/config.txt
    echo "dtoverlay=vc4-kms-v3d" >> /boot/config.txt
    echo "max_framebuffers=2" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Don't have the firmware create an initial video= setting in cmdline.txt" >> /boot/config.txt
    echo "# Use the kernel default instead" >> /boot/config.txt
    echo "disable_fw_kms_setup=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Disable compensation for displays with overscan" >> /boot/config.txt
    echo "disable_overscan=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Disable rainbow screen at boot" >> /boot/config.txt
    echo "disable_splash=1" >> /boot/config.txt
    echo "# Run in 64bit mode" >> /boot/config.txt
    echo "arm_64bit=1" >> /boot/config.txt
    echo "# Run as fast as the firmware / board allows" >> /boot/config.txt
    echo "arm_boost=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# RPi 5B/4B/400 ONLY" >> /boot/config.txt
    echo "# For 4k content @ 60 Hz refresh rate, uncomment hdmi_enable_4kp60=1" >> /boot/config.txt
    echo "#hdmi_enable_4kp60=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "[cm4]" >> /boot/config.txt
    echo "# Enable host mode on the 2711 built-in XHCI USB controller" >> /boot/config.txt
    echo "# This line should be remoed if the legacy DWC2 controller is required" >> /boot/config.txt
    echo "otg_mode=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "[all]" >> /boot/config.txt
    fi
}

post_upgrade () {
  # Define root partitions partuuid
  PART_DEV=`findmnt / -o source -n | cut -f1 -d"["`
  PART_NAME=`echo $PART_DEV | cut -d "/" -f 3`
  ROOT_PART=$(lsblk -p -o NAME,PARTUUID | grep "${PART_NAME}" | awk '{print $2}')
  FSTYPE=$(lsblk -p -o NAME,FSTYPE | grep "${PART_NAME}" | awk '{print $2}')

  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "btrfs" ]]; then
   echo "===> Installing default btrfs cmdline.txt /boot..."
   echo "rootflags=subvol=@ rootfstype=btrfs root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi   
  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "ext4" ]]; then
   echo "===> Installing default ext4 cmdline.txt /boot..."
   echo "root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi
  if [ ! -f /boot/cmdline.txt ] && [[ "$FSTYPE" == "f2fs" ]]; then
   echo "===> Installing default f2fs cmdline.txt /boot..."
   echo "root=PARTUUID=$ROOT_PART rw rootwait console=serial0,115200 console=tty3 selinux=0 quiet splash plymouth.ignore-serial-consoles smsc95xx.turbo_mode=N dwc_otg.lpm_enable=0 usbhid.mousepoll=8 audit=0" > /boot/cmdline.txt
   fi

  if [ -f /boot/config.txt ]; then
    echo "===> Modifing config.txt to load for pi3/4/5 kernels"
    sed -i 's\initramfs initramfs-linux.img followkernel\auto_initramfs=1\g' /boot/config.txt
    sed -i '/kernel=kernel8.img/I d' /boot/config.txt
   else
    echo "===> Installing default config.txt to /boot/..."
    echo "# See /boot/overlays/README for all available options" > /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Uncomment some or all of these to enable optional Hardware interfaces" >> /boot/config.txt
    echo "#dtparam=i2c_arm=on" >> /boot/config.txt
    echo "#dtparam=i2s=on" >> /boot/config.txt
    echo "#dtparam=spi=on" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Enable sound" >> /boot/config.txt
    echo "dtparam=audio=on" >> /boot/config.txt
    echo "# Uncomment if no sound thru hdmi" >> /boot/config.txt
    echo "#hdmi_drive=2" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# See /boot/overlays/README for all available options" > /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Auto load overlays for detected cameras" >> /boot/config.txt
    echo "camera_auto_detect=1" >> /boot/config.txt
    echo "# Auto load overlays for detected DSI displays" >> /boot/config.txt
    echo "display_auto_detect=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Auto load initramfs files if found" >> /boot/config.txt
    echo "auto_initramfs=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Enable DRM VC4 V3D driver" >> /boot/config.txt
    echo "dtoverlay=vc4-kms-v3d" >> /boot/config.txt
    echo "max_framebuffers=2" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Don't have the firmware create an initial video= setting in cmdline.txt" >> /boot/config.txt
    echo "# Use the kernel default instead" >> /boot/config.txt
    echo "disable_fw_kms_setup=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Disable compensation for displays with overscan" >> /boot/config.txt
    echo "disable_overscan=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# Disable rainbow screen at boot" >> /boot/config.txt
    echo "disable_splash=1" >> /boot/config.txt
    echo "# Run in 64bit mode" >> /boot/config.txt
    echo "arm_64bit=1" >> /boot/config.txt
    echo "# Run as fast as the firmware / board allows" >> /boot/config.txt
    echo "arm_boost=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "# RPi 5B/4B/400 ONLY" >> /boot/config.txt
    echo "# For 4k content @ 60 Hz refresh rate, uncomment hdmi_enable_4kp60=1" >> /boot/config.txt
    echo "#hdmi_enable_4kp60=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "[cm4]" >> /boot/config.txt
    echo "# Enable host mode on the 2711 built-in XHCI USB controller" >> /boot/config.txt
    echo "# This line should be remoed if the legacy DWC2 controller is required" >> /boot/config.txt
    echo "otg_mode=1" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "" >> /boot/config.txt
    echo "[all]" >> /boot/config.txt
    fi
}

post_remove () {
  rm -f boot/initramfs.img
}
